# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip
require_relative '../node_modules/react-native-permissions/scripts/setup'

platform :ios, min_ios_version_supported
prepare_react_native_project!

setup_permissions([
  # 'Camera',
  # 'MediaLibrary',
  'Notifications',
  # 'PhotoLibrary',
  # 'PhotoLibraryAddOnly',
])

# flipper_config = FlipperConfiguration.disabled
# $RNFirebaseAsStaticFramework = false
# $RNFirebaseAnalyticsWithoutAdIdSupport = true

# use_modular_headers!
#flags = get_default_flags()


target 'uoslife' do
  config = use_native_modules!
  use_frameworks! :linkage => :static
  $RNFirebaseAsStaticFramework = true

  use_react_native!(
    :path => config[:reactNativePath],
    # :hermes_enabled => flags[:hermes_enabled],
    # :fabric_enabled => flags[:fabric_enabled],
    # :flipper_configuration => flipper_config,
    :app_path => "#{Pod::Config.instance.installation_root}/.."
    )
  # pod 'FirebaseCore', :modular_headers => true;
  # pod 'GoogleUtilities', :modular_headers => true;
end

post_install do |installer|
  react_native_post_install(
    installer,
    # :mac_catalyst_enabled => false
    # config[:reactNativePath],
    :mac_catalyst_enabled => false,
    # :ccache_enabled => true
  )
  # __apply_Xcode_12_5_M1_post_install_workaround(installer)
  installer.pods_project.targets.each do |target|
    if target.name == "React-Core.common-AccessibilityResources"
      target.remove_from_project
    end
    target.build_configurations.each do |config|
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)', '_LIBCPP_ENABLE_CXX17_REMOVED_UNARY_BINARY_FUNCTION']
      config.build_settings.delete 'IPHONEOS_DEPLOYMENT_TARGET'
    end
  end
end
